// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NewDontDo /> tests <NewDontDo /> renders correctly 1`] = `
<View
  accessible={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "height": "100%",
    }
  }
>
  <View
    style={
      Object {
        "width": "90%",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#86939e",
          "fontSize": 16,
          "fontWeight": "bold",
        }
      }
    >
      Tittel på Dont Do
    </Text>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomWidth": 1,
          "borderColor": "#86939e",
          "flexDirection": "row",
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Tittel"
        style={
          Object {
            "alignSelf": "center",
            "color": "black",
            "flex": 1,
            "fontSize": 18,
            "height": 40,
            "marginLeft": 10,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
  </View>
  <View
    style={
      Object {
        "width": "90%",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#86939e",
          "fontSize": 16,
          "fontWeight": "bold",
        }
      }
    >
      Beskrivelse på Dont Do
    </Text>
    <View
      style={
        Object {
          "alignItems": "center",
          "borderBottomWidth": 1,
          "borderColor": "#86939e",
          "flexDirection": "row",
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Beskrivelse"
        style={
          Object {
            "alignSelf": "center",
            "color": "black",
            "flex": 1,
            "fontSize": 18,
            "height": 40,
            "marginLeft": 10,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
  </View>
  <View
    style={
      Array [
        undefined,
        false,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "borderRadius": 50,
          "margin": 20,
          "opacity": 1,
          "width": "50%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#D1D5D8",
            "borderRadius": 3,
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#F3F4F5",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            }
          }
        >
          Lagre
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<NewDontDo /> tests constructNewDontDo multiplePreviousState 1`] = `
Object {
  "0": Object {
    "content": "previous content 1",
    "done": false,
    "title": "previous title 1",
  },
  "1": Object {
    "content": "previous content 1",
    "done": false,
    "title": "previous title 1",
  },
  "2": Object {
    "content": "Test Content",
    "done": false,
    "title": "Test Title",
  },
}
`;

exports[`<NewDontDo /> tests constructNewDontDo noPreviousState 1`] = `
Object {
  "0": Object {
    "content": "Test Content",
    "done": false,
    "title": "Test Title",
  },
}
`;
